name: Python tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixpkgs-24.05-darwin

      - name: Generate cache key
        run: |
          nixpkgs_hash=$(egrep -o 'archive/[0-9a-f]{40}\.tar\.gz' shell.nix | cut -d'/' -f2 | cut -d'.' -f1)
          echo "CACHE_KEY=${{ runner.os }}-$nixpkgs_hash" >> $GITHUB_ENV

      - name: Cache Nix store
        uses: actions/cache@v4
        id: nix-cache
        with:
          key: nix-${{ env.CACHE_KEY }}
          path: /tmp/nix-cache

      - name: Import Nix store cache
        if: steps.nix-cache.outputs.cache-hit == 'true'
        run: |
          nix-store --import < /tmp/nix-cache

      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          key: python-${{ env.CACHE_KEY }}-${{ hashFiles('uv.lock') }}
          path: |
            ~/.cache/uv
            .venv

      - name: Cache Bun packages
        uses: actions/cache@v4
        with:
          key: bun-${{ env.CACHE_KEY }}-${{ hashFiles('bun.lockb') }}
          path: |
            ~/.bun/install/cache
            node_modules

      - name: Cache generated files
        uses: actions/cache@v4
        with:
          key: generated-${{ env.CACHE_KEY }}-${{ hashFiles('uv.lock', 'bun.lockb') }}
          path: |
            app/static/img/element/_generated
            config/locale/gnu
            config/locale/i18next
            config/locale/postprocess

      - name: Start services
        run: |
          nix-shell --pure --run "dev-start"

      - name: Run tests
        env:
          POSTGRES_LOG: 1
        run: |
          nix-shell --pure --run "run-tests term"

      - name: Export Nix store cache
        if: steps.nix-cache.outputs.cache-hit != 'true'
        run: |
          nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') > /tmp/nix-cache
