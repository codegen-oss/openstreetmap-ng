syntax = "proto3";

// Cursor for tracking the fetch progress from the API
message Cursor {
    int64 id = 1;
    optional int64 timestamp = 2;
}

// Binary data wrapped in extra metadata for file caching
message FileCacheMeta {
    bytes data = 1;
    optional int64 expires_at = 2;
}

// Struct extending the token with a unique id for efficient lookup
message UserTokenStruct {
    int64 id = 1;
    bytes token = 2;
}

// Versioned user password structure
message UserPassword {
    message Legacy {
        // Server-sided argon2/md5/pbkdf2
        string digest = 1;
        optional string extra = 2;
    }
    message V1 {
        // Client-sided pbkdf2 + Server-sided argon2
        // pbkdf2: SHA-512, N iterations -- see https://en.wikipedia.org/wiki/PBKDF2
        // argon2: RFC_9106_LOW_MEMORY
        bytes hash = 1;
        bytes salt = 2;
    }
    oneof schema {
        Legacy legacy = 1;
        V1 v1 = 2;
    }
}
