syntax = "proto3";

// Cursor for tracking the fetch progress from the API
message Cursor {
    int64 id = 1;
    optional int64 timestamp = 2;
}

// Binary data wrapped in extra metadata for file caching
message FileCacheMeta {
    bytes data = 1;
    optional int64 expires_at = 2;
}

// Struct extending the token with a unique id for efficient lookup
message UserTokenStruct {
    int64 id = 1;
    bytes token = 2;
}

// Versioned user password structure
message UserPassword {
    message Legacy {
        // Server-sided argon2/md5/pbkdf2
        string digest = 1;
        optional string extra = 2;
    }
    message V1 {
        // Client-sided pbkdf2: SHA-512, 100_000 iterations
        // Server-sided argon2: argon2id v=19 m=8192 t=3 p=4
        bytes hash = 1;
        bytes salt = 2;
    }
    oneof schema {
        Legacy legacy = 1;
        V1 v1 = 2;
    }
}

// Auth provider authentication state
message AuthProviderState {
    uint64 timestamp = 1;
    string provider = 2;
    string action = 3;
    optional string referer = 4;
    bytes nonce = 5;
}

// Auth provider successful verification
message AuthProviderVerification {
    uint64 timestamp = 1;
    string provider = 2;
    string uid = 3;
    optional string name = 4;
    optional string email = 5;
}
